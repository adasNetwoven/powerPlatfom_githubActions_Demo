name: Power Platform Export & Tag

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: "Name of the solution"
        required: true
        default: PPfirstsoultion
      exported_solution_folder:
        description: "Name of the folder where the solution needs to be exported"
        required: true
        default: "exported-solutions"
      branch_name:
        description: "Branch to run on (dev/test/prod)"
        required: true
        default: Dev
      managed:
        description: "Export as Managed?"
        required: true
        type: boolean
        default: false
env:
#edit your values here
  ENVIRONMENT_URL: 'https://orgeacfefe8.crm.dynamics.com/'
  CLIENT_ID: 'be16e478-4f72-4c79-a086-0a400d3e4215'
  TENANT_ID: '9e6723d3-eca3-4f1c-9e51-4022bcab3bd2'
jobs:
  export-commit-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # required for commit & tag

    steps:
      # 1. Checkout the branch chosen by user
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch_name }}

      # 2. Install Power Platform CLI
      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Clean up old solution zip
        run: |
          if [ -f ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }}.zip ]; then
            rm  ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }}.zip
          fi
      - name: Clean up old solution folder
        run: |
          if [ -d ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }} ]; then
            rm -rf ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }}
          fi
      # 3. Export the solution from the correct environment
      - name: Export solution
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{env.ENVIRONMENT_URL}}
          app-id: ${{env.CLIENT_ID}}
          client-secret: ${{ secrets.PowerPlatformSPN }}
          tenant-id: ${{env.TENANT_ID}}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }}.zip
          managed: ${{ github.event.inputs.managed }}

      # 4. Unpack the solution
      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v1
        with:
          solution-file: ${{ github.event.inputs.exported_solution_folder}}/${{ github.event.inputs.solution_name }}.zip
          solution-folder: ${{ github.event.inputs.exported_solution_folder}}/${{ github.event.inputs.solution_name }}
          solution-type: ${{ github.event.inputs.managed == 'true' && 'Managed' || 'Unmanaged' }}

          overwrite-files: true
        
      # 5. Commit the exported file back to same branch
      - name: Commit solution
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }}.zip
          git add ${{ github.event.inputs.exported_solution_folder }}/${{ github.event.inputs.solution_name }}
          git commit -m "Exported ${{ github.event.inputs.solution_name }} on $(date)" || echo "No changes to commit"
          git push origin HEAD:${{ github.event.inputs.branch_name }}

      # 6. Create and push a tag
      - name: Create Git tag
        run: |
          git tag ${{ github.event.inputs.solution_name }}-$GITHUB_RUN_NUMBER
          git push origin ${{ github.event.inputs.solution_name }}-$GITHUB_RUN_NUMBER

      # 7. Show output message
      - name: Show notice
        run: |
            echo "::notice::Your solution has been exported."
            echo "::notice::Exported solution folder: ${{ github.event.inputs.exported_solution_folder }}."
            echo "::notice::Solution:${{ github.event.inputs.solution_name }}"
            echo "::notice::Tag: ${{ github.event.inputs.solution_name }}-$GITHUB_RUN_NUMBER"
            
            
